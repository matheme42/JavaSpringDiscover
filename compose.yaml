services:
  mysql:
    container_name: mysqlserver  
    hostname: mysql
    build:
      context: ./database
      args:
        - MYSQL_DATABASE=db_example
        - MYSQL_USER=springuser
        - MYSQL_PASSWORD=ThePassword
        - MYSQL_ROOT_PASSWORD=my_secret_pw
      dockerfile: Dockerfile
    restart: on-failure:2
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backend

  api:
    container_name: apiserver  
    restart: on-failure:2
    hostname: api
    depends_on:
      - mysql
    build:
      context: ./api
      dockerfile: Dockerfile
    volumes:
      - ./api:/app
    networks:
      - frontend
      - frontendangular
      - backend
    ports:
      - 9000:9000

  web:
    container_name: webserver
    restart: on-failure:2
    hostname: web
    depends_on:
      - mysql
      - api  
    build:
      context: ./api
      dockerfile: Dockerfile
    volumes:
      - ./web:/app
    networks:
      - frontend
    ports:
      - 9001:9001


  webangular:
    container_name: angularserver
    restart: on-failure:2
    hostname: web-angular
    depends_on:
      - mysql
      - api  
    build:
      context: ./webangular
      dockerfile: Dockerfile
    volumes:
      - /app/node_modules
      - ./webangular:/app
    networks:
      - frontendangular
    ports:
      - 4200:4200

  # mqtt5 eclipse-mosquitto
  mqtt5:
    image: iegomez/mosquitto-go-auth
    container_name: mqtt5
    restart: on-failure:2
    hostname: mqtt5
    depends_on:
      - mysql
      - api  
    networks:
      - backend
    ports:
      - "8083:8083" #default mqtt port for websockets
    volumes:
      - ./mosquitto/conf:/etc/mosquitto/:rw
      - ./mosquitto/config:/mosquitto/config:rw
      - ./mosquitto/data:/mosquitto/data:rw
      - ./mosquitto/log:/mosquitto/log:rw


volumes:
  mysql-data:

networks:
  backend:
  frontend:
  frontendangular:
